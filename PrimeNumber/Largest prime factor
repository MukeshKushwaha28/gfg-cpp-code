Given a number N, the task is to find the largest prime factor of that number.
 

Example 1:

Input:
N = 5
Output:
5
Explanation:
5 has 1 prime factor 
i.e 5 only.
Example 2:

Input:
N = 24
Output:
3
Explanation:
24 has 2 prime factors 
3 and 2 in which 3 is 
greater


************************************************************************************************
// { Driver Code Starts
#include<bits/stdc++.h> 
using namespace std;

 // } Driver Code Ends
class Solution{
public: 
    
    bool prime(int n)
    {
        if(n==1)
        return false;
        
        if(n==2||n==3)
         return true;
         
         if(n%2==0 || n%3==0)
          return false;
           
          for(int i = 5;i*i<=n;i+=6)
          {
              if(n%i==0 || n%(i+2)==0)
                 return false;
          }
           
           
          return true;
    }

    long long int largestPrimeFactor(int n){
    
     long long maxPrime = -1;
    
    while(n%2==0){
    
    maxPrime = 2;
     n = n/2;
    }
    
    
    while(n%3==0){
    
      maxPrime = 3;
        n = n/3;
    }
    
    
    for(int i  = i<=sqrt(n);i+=6)
    {
        while(n%i==0)
        {
            maxPrime = i;
            n = n/i;
        }
        
         while(n%(i+2)==0)
        {
            maxPrime = i+2;
            n = n/(i+2);
        }
        
        if(n>4)
        maxPrime = n;
        
        return maxPrime;
    }
};

// { Driver Code Starts.
int main() 
{ 
    int t;
    cin>>t;
    while(t--)
    {
        int N;
        cin>>N;
        Solution ob;
        cout << ob.largestPrimeFactor(N) << endl;
    }
    return 0; 
}  // } Driver Code Ends
